name: Build & Test

on:
  pull_request:
    branches:
      - develop
      - "feat*"
  merge_group:
    types: [checks_requested]
    branches: 
      - develop
      - "feat*"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-workflow:
    name: PR Workflow
    # If any dependent jobs fails, this WF skips which won't block merging PRs
    # calling always() is required for this WF to run all the time
    
    runs-on: ubuntu-latest
    needs:
      - java-gradle-integration
    steps:
      - name: report-failure
        if: |
          needs.java-gradle-integration.result != 'success'
        run: exit 1
      - name: report-success
        run: exit 0

  test:
    name: test
    runs-on: windows-latest
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "8.9"
      - run: gradle -v
      - run: java --version
      - run: $env:TMPDIR
      - run: $env:TEMP
      - run: $env:TMP
      - run: $env:userprofile

  java-gradle-integration:
    name: ${{ matrix.os }} / ${{ matrix.python }} / java gradle
    runs-on: ${{ matrix.os }}
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-2019
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "8.9"
      - run: make init
      - run: pytest -vv tests/integration/workflows/java_gradle/test_java_gradle.py::TestJavaGradle_3_java21::test_build_with_layers_and_scope
